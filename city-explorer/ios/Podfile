require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")
require File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts/react_native_pods")

require 'json'
podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties.json'))) rescue {}

ENV['RCT_NEW_ARCH_ENABLED'] = '0' if podfile_properties['newArchEnabled'] == 'false'
ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']

platform :ios, podfile_properties['ios.deploymentTarget'] || '15.1'
install! 'cocoapods',
  :deterministic_uuids => false

prepare_react_native_project!

# @generated begin @rnmapbox/maps-rnmapboxmapsimpl - expo prebuild (DO NOT MODIFY)
$RNMapboxMapsDownloadToken = 'sk.eyJ1IjoiemV6bzAxNjEiLCJhIjoiY21ldnoxdGhpMGx5YjJxc2RhZjdkNG8wMSJ9.fVzhkrId45nUDlhhqbYunQ'
$RNMapboxMapsImpl = 'mapbox'
# @generated end @rnmapbox/maps-rnmapboxmapsimpl

target 'cityexplorer' do
  use_expo_modules!

  if ENV['EXPO_USE_COMMUNITY_AUTOLINKING'] == '1'
    config_command = ['node', '-e', "process.argv=['', '', 'config'];require('@react-native-community/cli').run()"];
  else
    config_command = [
      'npx', 'expo-modules-autolinking', 'react-native-config',
      '--json', '--platform', 'ios'
    ]
  end

  config = use_native_modules!(config_command)

  use_frameworks! :linkage => podfile_properties['ios.useFrameworks'].to_sym if podfile_properties['ios.useFrameworks']
  use_frameworks! :linkage => ENV['USE_FRAMEWORKS'].to_sym if ENV['USE_FRAMEWORKS']

  # @generated begin pre_installer - expo prebuild (DO NOT MODIFY)
  pre_install do |installer|
    # @generated begin @rnmapbox/maps-pre_installer - expo prebuild (DO NOT MODIFY)
    $RNMapboxMaps.pre_install(installer)
    # @generated end @rnmapbox/maps-pre_installer
  end
  # @generated end pre_installer

  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => podfile_properties['expo.jsEngine'].nil? || podfile_properties['expo.jsEngine'] == 'hermes',
    :app_path => "#{Pod::Config.instance.installation_root}/..",
    :privacy_file_aggregation_enabled => podfile_properties['apple.privacyManifestAggregationEnabled'] != 'false',
  )

  # ‚úÖ SINGLE post_install block (merge everything here)
  post_install do |installer|
    # @generated begin @rnmapbox/maps-post_installer - expo prebuild (DO NOT MODIFY)
    $RNMapboxMaps.post_install(installer)
    # @generated end @rnmapbox/maps-post_installer

    # React Native post-install
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
      :ccache_enabled => podfile_properties['apple.ccacheEnabled'] == 'true'
    )

    # üîß Disable User Script Sandboxing (fixes ‚ÄúSandbox: bash deny file-read-data ‚Ä¶‚Äù)
    installer.pods_project.targets.each do |t|
      t.build_configurations.each do |cfg|
        cfg.build_settings['ENABLE_USER_SCRIPT_SANDBOXING'] = 'NO'
      end
    end

    # Xcode 14 devices: prevent signing resource bundles
    installer.target_installation_results.pod_target_installation_results
      .each do |pod_name, target_installation_result|
        target_installation_result.resource_bundle_targets.each do |resource_bundle_target|
          resource_bundle_target.build_configurations.each do |cfg|
            cfg.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
          end
        end
      end
  end
end
